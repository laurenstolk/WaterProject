@page "/admin/donations"
@inherits OwningComponentBase<IDonationRepository>

<DonationsTable TableTitle="Uncollected Donations" Donations="UncollectedDonations"
                ButtonLabel="Collected" DonationSelected="CollectDonation"></DonationsTable>

<DonationsTable TableTitle="Collected Donations" Donations="CollectedDonations"
                ButtonLabel="Reset" DonationSelected="ResetDonation"></DonationsTable>

<button class="btn btn-info" @onclick="@(x=> UpdateData())">>Refresh Data</button>


@code {

    public IDonationRepository repo => Service;

    public IEnumerable<Donation> AllDonations { get; set; }
    public IEnumerable<Donation> UncollectedDonations { get; set; }
    public IEnumerable<Donation> CollectedDonations { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllDonations = await repo.Donations.ToListAsync();
        UncollectedDonations = AllDonations.Where(x => !x.DonationReceived);
        CollectedDonations = AllDonations.Where(x => x.DonationReceived);
    }

    public void CollectDonation(int id) => UpdateDonation(id, true);
    public void ResetDonation(int id) => UpdateDonation(id, false);

    public void UpdateDonation(int id, bool donated)
    {
        Donation d = repo.Donations.FirstOrDefault(x => x.DonationID == id);
        d.DonationReceived = donated;
        repo.SaveDonation(d);

    }

}

